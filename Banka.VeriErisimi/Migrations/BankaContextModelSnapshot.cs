// <auto-generated />
using System;
using Banka.VeriErisim.Somut.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Banka.VeriErisimi.Migrations
{
    [DbContext(typeof(BankaContext))]
    partial class BankaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Banka.Varlıklar.Somut.DestekTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("DestekTalepleri");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.GirisOlayi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Basarili")
                        .HasColumnType("bit");

                    b.Property<string>("IpAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Zaman")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("GirisOlaylari");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.GirisToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("GecerlilikBitis")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("GirisTokenlari");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Hesap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bakiye")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HesapTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Hesaplar");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Islem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AliciHesapId")
                        .HasColumnType("int");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GonderenHesapId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AliciHesapId");

                    b.HasIndex("GonderenHesapId");

                    b.ToTable("Islemler");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KartNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KartTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SonKullanma")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Kartlar");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.KartIslem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KartId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KartId");

                    b.ToTable("KartIslemleri");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kayit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eylem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Kayıtlar");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifreSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.KullaniciRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("RolId");

                    b.ToTable("KullaniciRolleri");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RolAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subeler");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.DestekTalebi", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("DestekTalepleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.GirisOlayi", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("GirisOlaylari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.GirisToken", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("GirisTokenlari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Hesap", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("Hesaplar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Islem", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Hesap", "AliciHesap")
                        .WithMany("AliciIslemler")
                        .HasForeignKey("AliciHesapId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Banka.Varlıklar.Somut.Hesap", "GonderenHesap")
                        .WithMany("GonderenIslemler")
                        .HasForeignKey("GonderenHesapId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AliciHesap");

                    b.Navigation("GonderenHesap");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kart", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("Kartlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.KartIslem", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kart", "Kart")
                        .WithMany("KartIslemleri")
                        .HasForeignKey("KartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kart");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kayit", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("Kayitlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kullanici", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Sube", "Sube")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.KullaniciRol", b =>
                {
                    b.HasOne("Banka.Varlıklar.Somut.Kullanici", "Kullanici")
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Banka.Varlıklar.Somut.Rol", "Rol")
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Hesap", b =>
                {
                    b.Navigation("AliciIslemler");

                    b.Navigation("GonderenIslemler");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kart", b =>
                {
                    b.Navigation("KartIslemleri");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Kullanici", b =>
                {
                    b.Navigation("DestekTalepleri");

                    b.Navigation("GirisOlaylari");

                    b.Navigation("GirisTokenlari");

                    b.Navigation("Hesaplar");

                    b.Navigation("Kartlar");

                    b.Navigation("Kayitlar");

                    b.Navigation("KullaniciRolleri");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Rol", b =>
                {
                    b.Navigation("KullaniciRolleri");
                });

            modelBuilder.Entity("Banka.Varlıklar.Somut.Sube", b =>
                {
                    b.Navigation("Kullanicilar");
                });
#pragma warning restore 612, 618
        }
    }
}
